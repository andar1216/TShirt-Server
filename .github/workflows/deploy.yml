name: ðŸš€ CI/CD via AWS ECR â†’ EC2

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Log in to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push to ECR
        run: |
          IMAGE_URI=${{ steps.ecr-login.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}
          docker build \
            -t $IMAGE_URI:latest \
            -t $IMAGE_URI:${{ github.sha }} \
            .
          docker push $IMAGE_URI:latest
          docker push $IMAGE_URI:${{ github.sha }}

  deploy:
    name: Deploy to EC2 (self-hosted)
    needs: build
    runs-on: 
      - self-hosted
      - linux
      - x64
      - ec2

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Log in to ECR
        id: ecr-login-deploy
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull new image
        run: |
          IMAGE_URI=${{ steps.ecr-login-deploy.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}
          docker pull $IMAGE_URI:${{ github.sha }}

      - name: Stop & remove old container
        run: |
          docker stop nodejs-backend || true
          docker rm   nodejs-backend || true

      - name: Start container with secrets
        run: |
          IMAGE_URI=${{ steps.ecr-login-deploy.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}
          docker run -d \
            --name nodejs-backend \
            -p 5000:5000 \
            -e NODE_ENV=production \
            -e STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }} \
            -e STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }} \
            -e PG_HOST=${{ secrets.PG_HOST }} \
            -e PG_PORT=${{ secrets.PG_PORT }} \
            -e PG_USER=${{ secrets.PG_USER }} \
            -e PG_PASSWORD=${{ secrets.PG_PASSWORD }} \
            -e PG_DATABASE=${{ secrets.PG_DATABASE }} \
            $IMAGE_URI:${{ github.sha }}

      - name: Verify container is running
        run: |
          sleep 5
          curl -f http://localhost:5000/api/config || (docker logs nodejs-backend && exit 1)




